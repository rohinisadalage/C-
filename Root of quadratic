#include <iostream>
#include <cmath>
using namespace std;
void findRoots(double a, double b, double c) {
    double discriminant, root1, root2, realPart, imagPart;   
    discriminant = b * b - 4 * a * c;
    if (discriminant > 0) {
        root1 = (-b + sqrt(discriminant)) / (2 * a);
        root2 = (-b - sqrt(discriminant)) / (2 * a);
        cout << "Roots are real and distinct:\n";
        cout << "Root 1 = " << root1 << endl;
        cout << "Root 2 = " << root2 << endl;
    }
    else if (discriminant == 0) {
        root1 = root2 = -b / (2 * a);
        cout << "Roots are real and equal:\n";
        cout << "Root 1 = Root 2 = " << root1 << endl;
    }
    else {
        realPart = -b / (2 * a);
        imagPart = sqrt(-discriminant) / (2 * a);
        cout << "Roots are complex and distinct:\n";
        cout << "Root 1 = " << realPart << " + " << imagPart << "i" << endl;
        cout << "Root 2 = " << realPart << " - " << imagPart << "i" << endl;
    }
}
int main() {
    double a, b, c;
    cout << "Enter coefficients a, b, and c: ";
    cin >> a >> b >> c;
    if (a == 0) {
        cout << "Error: 'a' cannot be zero in a quadratic equation." << endl;
    } else {
        findRoots(a, b, c);
    }
    return 0;
}
